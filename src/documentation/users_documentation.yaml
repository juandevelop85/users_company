openapi: '3.0.0'
info:
    version: 1.0.0
    title: UsersCompany Users services
    description: Api para el microservicios de usuarios
    termsOfService: http://swagger.io/terms/
    license:
        name: Apache 2.0
        url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
    - url: http://localhost:3000/users/api/v1
    - url: http://test.com/users/api/v1
    - url: http://production.com/users/api/v1
paths:
    /fetchUserByDocumentId/{id_identification_type}/{id_number}:
        get:
            description: Consulta un usuario y los roles por empresa.
            operationId: fetchUserByDocumentId
            parameters:
                - name: id_identification_type
                  in: path
                  description: identification type id
                  required: true
                  schema:
                      type: number
                - name: id_number
                  in: path
                  description: number id
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    description: login response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Response'
                default:
                    description: unexpected error
                    content: 
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
    /createUser:
        post:
            description: Crea un usuario en la BD asignando un rol en una compa√±ia
            operationId: saveTransactionId
            requestBody:
                description: Datos de items de compra
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/CreateUser'
            responses:
                '200':
                    description: register response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Response'
                default:
                    description: unexpected error
                    content: 
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
components:
    securitySchemes:
            bearerAuth:
                type: http
                scheme: bearer
                bearerFormat: JWT
    schemas:
        CreateUser:
            required:
                - firstname
                - lastname
                - id_identification_type
                - id_number
                - email
                - phone
                - role
                - company_nit
            properties:
                firstname:
                    type: string
                lastname:
                    type: string
                id_identification_type:
                    type: number
                id_number:
                    type: string
                email:
                    type: string
                phone:
                    type: string
                role:
                    type: string
                company_nit:
                    type: string
        Response:
            properties:
                message:
                    type: string
                user:
                    type: object
        Error:
            required:
                - message
                - error
            properties:
                message:
                    type: string
                error:
                    type: boolean